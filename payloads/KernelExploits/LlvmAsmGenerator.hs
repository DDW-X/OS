-- LlvmAsmGenerator.hs
-- Auto-generated scaffold.

module KernelExploits.LlvmAsmGenerator where

import LLVM.Context
import LLVM.Module
import LLVM.AST
import LLVM.AST.Type
import LLVM.AST.AddressSpace
import LLVM.AST.Constant
import LLVM.AST.Instruction
import LLVM.AST.IntegerPredicate
import Data.String
import Data.List

generateExploitAsm :: String -> IO BS.ByteString
generateExploitAsm targetOS = withContext $ \context -> do
    let mod = defaultModule { moduleName = "KernelExploit"
                           , moduleDefinitions = [global] }
    withModuleFromAST context mod $ \m -> do
        ll <- moduleLLVMAssembly m
        return $ BSC.pack ll
  where
    global = GlobalDefinition functionDefaults
        { name = "exploit_kernel"
        , parameters = ([], False)
        , returnType = VoidType
        , basicBlocks = [bb] }
    
    bb = BasicBlock (Name "entry") instructions terminator
    instructions = 
        [ Alloca i32 Nothing 0 []
        , Load False i32 (LocalReference i32 (Name "ptr")) Nothing 0 []
        , GetElementPtr False (LocalReference i32 (Name "ptr")) [ConstantOperand (CInt 32 0)] []
        ]
    
    terminator = Do $ Ret Nothing []
    
    i32 = IntegerType 32
    